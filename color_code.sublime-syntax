%YAML 1.2
---
name: color_code
file_extensions: [txt, notes]
scope: text

contexts:
  main:
    - include: code
    - include: notes
  code:
    # c
      - match: ^```(c)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.c
        embed_scope: meta.embedded.c.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # c++
      - match: ^```(c\+\+|cpp)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.c++
        embed_scope: meta.embedded.c++.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # c#
      - match: ^```(c#|cs)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.cs
        embed_scope: meta.embedded.cs.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # CSS
      - match: ^```(css|CSS)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.css
        embed_scope: meta.embedded.css.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # go
      - match: ^```(go|golang)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.go
        embed_scope: meta.embedded.go.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # HTML
      - match: ^```(html|HTML)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.html
        embed_scope: meta.embedded.html.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # java
      - match: ^```(java)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.java
        embed_scope: meta.embedded.java.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # javascript
      - match: ^```(js|javascript)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.js
        embed_scope: meta.embedded.js.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # JSON
      - match: ^```(json|JSON)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.json
        embed_scope: meta.embedded.json.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # kotlin
      - match: ^```(kotlin)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.kotlin
        embed_scope: meta.embedded.kotlin.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # markdown
      - match: ^```(md|markdown)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:text.html.markdown
        embed_scope: meta.embedded.markdown.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # python
      - match: ^```(py|python)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.python
        embed_scope: meta.embedded.python.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # regular expressions
      - match: ^```(re|regex|regexp)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.regexp
        embed_scope: meta.embedded.regexp.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # rust
      - match: ^```(rust)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.rust
        embed_scope: meta.embedded.rust.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # SQL
      - match: ^```(sql|SQL)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.sql
        embed_scope: meta.embedded.sql.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # typescript
      - match: ^```(ts|typescript)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.ts
        embed_scope: meta.embedded.ts.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # YAML
      - match: ^```(yaml|YAML)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.yaml
        embed_scope: meta.embedded.yaml.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
    # XML
      - match: ^```(xml|XML)$
        captures:
          1: punctuation.section.code.begin.markdown
          2: constant.other.markdown
        embed: scope:source.xml
        embed_scope: meta.embedded.xml.markdown
        escape: '^```$'
        escape_captures:
          0: punctuation.section.code.end.markdown
  notes:
    # generic line code
      - match: '`[^`]+`'
        scope: markup.raw.inline
    # block quotes
      - match: '"\*'
        scope: string.quoted.triple
        push:
          - meta_scope: string.quoted.triple
          - match: '\*"'
            scope: string.quoted.triple
            pop: 1
    # line quotes
      - match: '"[^"]*"'
        scope: string.quoted.double
    # block comments
      - match: '/\*'
        scope: comment.block
        push:
          - meta_scope: comment.block
          - match: '\*/'
            scope: comment.block
            pop: 1
      - match: '#\*'
        scope: comment.block
        push:
          - meta_scope: comment.block
          - match: '\*#'
            scope: comment.block
            pop: 1
    # line comments
      - match: '\/\/.*'
        scope: comment.line
      - match: '#.*'
        scope: comment.line
    # block panics
      - match: '!\*'
        scope: invalid.illegal
        push:
          - meta_scope: invalid.illegal
          - match: '\*!'
            scope: invalid.illegal
            pop: 1
    # line panics
      - match: '.*(!!)$'
        scope: invalid.illegal
      - match: '!!.*'
        scope: invalid.illegal
    # punctuation
      - match: '[+\-*/^&|=~<>;:!?$%]'
        scope: keyword.operator
    # keywords
      - match: '\.\.\.'
        scope: keyword.control
    # booleans
      - match: '\b(True|False)\b'
        scope: constant.language
    # singularities
      - match: '\b[A-Z]\b'
        scope: keyword.operator # maybe for this in to all caps or proper nouns?
    # all caps
      - match: '\b[A-Z][A-Z0-9_]+\b'
        scope: keyword.other
    # proper nouns
      - match: '\b[A-Z]\w+\b'
        scope: variable.function # or support.function for italics
    # links
      - match: '\b(https?:\/\/)?(\w+\.)?\w+\.(com|org|net|int|edu|gov|mil)\/?[\S]*\b'
        scope: markup.underline.link
    # numbers
      - match: '\d+'
        scope: constant.numeric.integer